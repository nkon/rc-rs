name: Rust

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup code
        uses: actions/checkout@v2

      - name: Install musl tools
        if : matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt install -qq -y musl-tools --no-install-recommends
      
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.target }}

      - name: Package for linux-musl
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          zip --junk-paths rc-${{ matrix.target }} target/${{ matrix.target }}/release/rc

      - name: Package for windows
        if: matrix.target == 'x86_64-pc-windows-msvc'
        run: |
          powershell Compress-Archive -Path target/${{ matrix.target }}/release/rc.exe -DestinationPath rc-${{ matrix.target }}.zip

      - name: Package for macOS
        if: matrix.target == 'x86_64-apple-darwin'
        run: |
          zip --junk-paths rc-${{ matrix.target }} target/${{ matrix.target }}/release/rc

      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: rc-${{ matrix.target }}.zip

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: '**/*'
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: false
          prerelease: true
